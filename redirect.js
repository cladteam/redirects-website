// GENERATED AUTOMATICALLY, DO NOT EDIT
let list = "W3siZnJvbSI6ImludHJhbmV0IiwidG8iOiJodHRwczovL3NpdGVzLmdvb2dsZS5jb20vdGlzbGFiLm9yZy9jbGFkLWludHJhbmV0In0seyJmcm9tIjoid2VsY29tZSIsInRvIjoiaHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3Rpc2xhYi5vcmcvd2VsY29tZSJ9LHsiZnJvbSI6ImZhcSIsInRvIjoiaHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3Rpc2xhYi5vcmcvY2xhZC1pbnRyYW5ldC9mYXEifSx7ImZyb20iOiJncm91cHMiLCJ0byI6Imh0dHBzOi8vc2l0ZXMuZ29vZ2xlLmNvbS90aXNsYWIub3JnL2NsYWQtaW50cmFuZXQvZ3JvdXBzIn0seyJmcm9tIjoiZm9ybXMiLCJ0byI6Imh0dHBzOi8vc2l0ZXMuZ29vZ2xlLmNvbS90aXNsYWIub3JnL2NsYWQtaW50cmFuZXQvZm9ybXMifSx7ImZyb20iOiJjYWxlbmRhciIsInRvIjoiaHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3Rpc2xhYi5vcmcvY2xhZC1pbnRyYW5ldC9jYWxlbmRhciJ9LHsiZnJvbSI6ImtpY2tvZmYiLCJ0byI6Imh0dHBzOi8vc2l0ZXMuZ29vZ2xlLmNvbS90aXNsYWIub3JnL2NsYWQtaW50cmFuZXQva2lja29mZiJ9LHsiZnJvbSI6ImRpcmVjdG9yeSIsInRvIjoiaHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3Rpc2xhYi5vcmcvY2xhZC1pbnRyYW5ldC9kaXJlY3RvcnkifSx7ImZyb20iOiJkZ3BzIiwidG8iOiJodHRwczovL3NpdGVzLmdvb2dsZS5jb20vdGlzbGFiLm9yZy9jbGFkLWludHJhbmV0L2RncHMifSx7ImZyb20iOiJzdGF0cyIsInRvIjoiaHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3Rpc2xhYi5vcmcvY2xhZC1pbnRyYW5ldC9zdGF0cyJ9LHsiZnJvbSI6ImxlYWRlcnNoaXAiLCJ0byI6Imh0dHBzOi8vc2l0ZXMuZ29vZ2xlLmNvbS90aXNsYWIub3JnL2NsYWQtaW50cmFuZXQvbGVhZGVyc2hpcCJ9LHsiZnJvbSI6ImNvcmVzIiwidG8iOiJodHRwczovL3NpdGVzLmdvb2dsZS5jb20vdGlzbGFiLm9yZy9jbGFkLWludHJhbmV0L2NvcmVzIn0seyJmcm9tIjoidHJhaW5pbmciLCJ0byI6Imh0dHBzOi8vc2l0ZXMuZ29vZ2xlLmNvbS90aXNsYWIub3JnL2NsYWQtaW50cmFuZXQvdHJhaW5pbmcifSx7ImZyb20iOiJndWVzdHMiLCJ0byI6Imh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vYS9jbGFkdGVhbS5pby9nL2d1ZXN0cyJ9LHsiZnJvbSI6ImFsbGhhbmRzLWRyaXZlIiwidG8iOiJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8wQUdKbmpkUmdXTGFiVWs5UFZBIn0seyJmcm9tIjoiZHJpdmUiLCJ0byI6Imh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzBBR0puamRSZ1dMYWJVazlQVkEifSx7ImZyb20iOiJhbGxoYW5kcy1hZ2VuZGEiLCJ0byI6Imh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvMUtWMURvd0VJUU9RNWpHSHV5MUg3NC1oOVg5N3NYd0xJS1hMVzZrQnpZcVkvZWRpdCJ9LHsiZnJvbSI6ImxlYWRzLWFnZW5kYSIsInRvIjoiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xUEhFX3lpODZ4SDNwSENGLS1ONGxWYW1HQzQ2N1pzZnVZZXM0NUI2MWNETS9lZGl0In0seyJmcm9tIjoiam9pbi1zbGFjayIsInRvIjoiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xQ0lLU3pPVlgtSEZaTEw1bkc0ZFB0WjMwbFNlUC1NSXpfTG1hV2JUaWNKOC9lZGl0In0seyJmcm9tIjoia2lja29mZi1hZ2VuZGEiLCJ0byI6Imh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvMVFHM1kwZk9WQjJYQUVjREtUWXZmWERQT2NNcGtwdWZBbEx4MFk4eHZZc0EifSx7ImZyb20iOiJzbGFjay1xdWlja3N0YXJ0IiwidG8iOiJodHRwczovL3NsYWNrLmNvbS9oZWxwL2FydGljbGVzLzM2MDA1OTkyODY1NC1Ib3ctdG8tdXNlLVNsYWNrLS15b3VyLXF1aWNrLXN0YXJ0LWd1aWRlIn0seyJmcm9tIjoibG9nb3MiLCJ0byI6Imh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvMUNJS1N6T1ZYLUhGWkxMNW5HNGRQdFozMGxTZVAtTUl6X0xtYVdiVGljSjgvZWRpdCJ9LHsiZnJvbSI6ImtpY2tvZmYtc2xpZGVzIiwidG8iOiJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8xTWlib2JOQ3FVMUgzSzZScWZIcC1sM1NZWTdfNTdCak0ifSx7ImZyb20iOiJkaXJlY3RvcnktcHJpdmF0ZSIsInRvIjoiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMVc5dmFabDVuUWF5cTZTLXBHZ0R3RXZQWjQxWk5rLWs3MnhVQ3pRSjh4LXcvZWRpdCNnaWQ9MCJ9LHsiZnJvbSI6ImxlYWRzLWRyaXZlIiwidG8iOiJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFDSUtTek9WWC1IRlpMTDVuRzRkUHRaMzBsU2VQLU1Jel9MbWFXYlRpY0o4L2VkaXQifSx7ImZyb20iOiJsZWFkcy16b29tIiwidG8iOiJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFDSUtTek9WWC1IRlpMTDVuRzRkUHRaMzBsU2VQLU1Jel9MbWFXYlRpY0o4L2VkaXQifSx7ImZyb20iOiJvbmJvYXJkaW5nIiwidG8iOiJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFDSUtTek9WWC1IRlpMTDVuRzRkUHRaMzBsU2VQLU1Jel9MbWFXYlRpY0o4L2VkaXQifSx7ImZyb20iOiJvZmZib2FyZGluZyIsInRvIjoiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xQ0lLU3pPVlgtSEZaTEw1bkc0ZFB0WjMwbFNlUC1NSXpfTG1hV2JUaWNKOC9lZGl0In0seyJmcm9tIjoiZmVlZGJhY2siLCJ0byI6Imh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvMUNJS1N6T1ZYLUhGWkxMNW5HNGRQdFozMGxTZVAtTUl6X0xtYVdiVGljSjgvZWRpdCJ9XQ==";

list = JSON.parse(window.atob(list));

// root where site is being hosted
const baseurl = "/redirects-website";

// normalize path. lower case, remove leading slashes, remove baseurl.
const from = window.location.pathname
  .toLowerCase()
  .replace(new RegExp(`^/*${baseurl}`), "")
  .replace(/^(\/+)/, "");

// find corresponding "to" field
const to = list.find((entry) => entry?.from === from)?.to;

// enable "preserve log" in browser dev tools to still see this after redirect
console.info({ from, to });

// immediately navigate to destination
if (to)
  window.location.href = to;

// if no matching destination
else {
  // show html error message
  const message = `
    No redirect link found for "${from}".<br>
  `;
  window.onload = () => { document.body.innerHTML = message };

  // OR, immediately navigate to some fallback url
  // window.location.href = "some-fallback-url.com/";
}
